#!/bin/bash
cd /var/www/html

HOST=$(hostname)
APP_NAME="tt-rss"

# TT-RSS Config
TTRSS_REPO="https://tt-rss.org/git/tt-rss.git"
TTRSS_DIR="$APP_NAME"
DEFAULT_CONF="$TTRSS_DIR/config.php-dist"
CONF="$TTRSS_DIR/config.php"

# Nginx Config
NGINX_CFG_DIR="/external/nginx/ext_apps"
NGINX_CFG_FILE="${NGINX_CFG_DIR}/${HOST}.conf"

# SQL DB Config
SQL_INIT_DIR="/external/initDB"
SQL_INIT_FILE="$SQL_INIT_DIR/tt-rss.sql"

# URLs config
LOCAL_PROTOCOL="http"
LOCAL_DOMAIN="$HOST"
LOCAL_PORT="80"
LOCAL_URI="$APP_NAME"
if [[ "$SELF_URL_PATH" =~ ^(http|https)://([^:\/]*)(:([0-9]+))?(/(.*))?$ ]]; then
	EXT_PROTOCOL="${BASH_REMATCH[1]}" 
	EXT_DOMAIN="${BASH_REMATCH[2]}"
	EXT_PORT="${BASH_REMATCH[4]}"
	EXT_URI="${BASH_REMATCH[6]}"
else
	echo "Provided SELF_URL_PATH is not valid.( http[s]://my.domain.xyz[:custom_port][/custom_uri] )"
	exit 1
fi

function install_ttrss {
	#usage : install_ttrss <branch_name|tag_name[default:master]>
	[[ $# -lt 1 ]] && TAG="master" || TAG="$1"
	echo "[INSTALL] TT-RSS.$TAG will be installed in $(pwd)/$TTRSS_DIR"
	if [[ ! -d "$TTRSS_DIR" ]]; then
		git clone -b "$TAG" "$TTRSS_REPO" "$TTRSS_DIR" \
		&& chown -R www-data:www-data "$TTRSS_DIR"
	fi
	[[ -f "$DEFAULT_CONF" ]]
}

function set_var{
	[[ ! -f "$CONF" ]] && echo "[CONFIG]  tt-rss config file not found ($CONF)." && return 1
	[[ $# -ne 2 ]] && echo "usage: $0 <\"variable_name\"> <\"value\">" && return 2
	echo "[CONFIG]  define $1=$2"
	sed -ri.bak 's|^(\s*define\('\''$1'\'',).*$|\1 "$2");|;' "$CONF"
}

function set_other_vars {
	# $1 must be in the form : var_name="value ezvsnv"; [var_name="value ezvsnv";] ...
	[[ $# -ne 1 ]] && return 1
	[[ -z $1 ]] && echo "[CONFIG]  no custom variables provided for tt-rss." && return 0
	
	local other_vars=$(echo "$1" | sed "s|\";\s*|\"\n|g")
	echo "[CONFIG]  list of custom properties provided for tt-rss : "
	echo "$other_vars"
	
	OIFS="$IFS"
	IFS=$'\n'
	for v in $other_vars; do
		if [[ "$v" =~ ^([0-9a-zA-Z_]+)=\"(.*)\"$ ]]; then
			set_var "${BASH_REMATCH[1]}" "${BASH_REMATCH[2]}" || return 1
		fi
	done
	IFS="$OIFS"
}

function config_ttrss {
	[[ -f "$CONF" ]] && echo "[CONFIG]  tt-rss is already configured." && return 0

	echo "[CONFIG]  TT-RSS configuration will be defined in $CONF (from $DEFAULT_CONF)"
	sed -r 's|^(\s*define\('\''DB_TYPE'\'',).*$|\1 "$DB_TYPE");|;
					s|^(\s*define\('\''DB_NAME'\'',).*$|\1 "$DB_NAME");|;
					s|^(\s*define\('\''DB_HOST'\'',).*$|\1 "$DB_HOST");|;
					s|^(\s*define\('\''DB_PORT'\'',).*$|\1 "$DB_PORT");|;
					s|^(\s*define\('\''DB_USER'\'',).*$|\1 "$DB_USER");|;
					s|^(\s*define\('\''DB_PASS'\'',).*$|\1 "$DB_PASS");|;
					s|^(\s*define\('\''PHP_EXECUTABLE'\'',).*$|\1 "$(which php)");|;
					s|^(\s*define\('\''SELF_URL_PATH'\'',).*$|\1 "$SELF_URL_PATH");|;' "$DEFAULT_CONF" > "$CONF"
	set_other_vars "$TTRSS_OPTS" || return 1
	[[ -f "$CONF" ]]
}

function write_sql_init {
	if [[ ! -f "$SQL_INIT_FILE" && ! -f "$SQL_INIT_FILE.done" ]]; then
		cat > "$SQL_INIT_FILE" <<-EOF
		--create user
		CREATE USER $DB_USER WITH LOGIN PASSWORD '$DB_PASS';
		--or update its password
		ALTER USER $DB_USER WITH PASSWORD '$DB_PASS';
		--change password validity period
		ALTER USER $DB_USER VALID UNTIL 'infinity';
		--create database
		CREATE DATABASE $DB_NAME OWNER $DB_USER; 
		--ENCODING 'UTF8' LC_COLLATE='fr_FR.UTF8' LC_CTYPE='fr_FR.UTF8' TEMPLATE template0;
		GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;
		
		EOF
	fi
}

function write_nginx_proxyconf {
	setProxyConf "tt-rss" "$NGINX_CFG_FILE" "$LOCAL_PROTOCOL://$LOCAL_DOMAIN:$LOCAL_PORT/$LOCAL_URI" "$SELF_URL_PATH"
}

function main {
	case $1 in
		tt-rss )
			install_ttrss "$TTRSS_TAG" && config_ttrss || exit 1
			if [[ -d "$SQL_INIT_DIR"  && ! -e "$SQL_INIT_FILE"     ]]; then
				write_sql_init || exit 2
			fi
			if [[ -d "$NGINX_CFG_DIR" && "$EXT_PROTOCOL" = "https" ]]; then
				write_nginx_proxyconf || exit 3
			fi
			apache2-foreground
			;;
		*)
			exit 0
			;;
	esac
}

main "$@"

#    tt-rss OPTS
# ENABLE_REGISTRATION false
# REG_NOTIFY_ADDRESS changeme
# REG_MAX_USERS 10
# MYSQL_CHARSET 'UTF8'
# FEED_CRYPT_KEY ''
# SINGLE_USER_MODE false
# SIMPLE_UPDATE_MODE false
# LOCK_DIRECTORY 'lock'
# CACHE_DIR 'cache'
# ICONS_DIR "feed-icons"
# ICONS_URL "feed-icons"
# AUTH_AUTO_CREATE true
# AUTH_AUTO_LOGIN true
# FORCE_ARTICLE_PURGE 0
# PUBSUBHUBBUB_HUB ''
# PUBSUBHUBBUB_ENABLED false
# SPHINX_SERVER 'localhost:9312'
# SPHINX_INDEX 'ttrss, delta'
# SESSION_COOKIE_LIFETIME 86400
# SMTP_FROM_NAME 'Tiny Tiny RSS'
# SMTP_FROM_ADDRESS 'noreply@your.domain.dom'
# DIGEST_SUBJECT '[tt-rss] New headlines for last 24 hours'
# SMTP_SERVER ''
# SMTP_LOGIN ''
# SMTP_PASSWORD ''
# SMTP_SECURE ''
# CHECK_FOR_UPDATES true
# ENABLE_GZIP_OUTPUT false
# PLUGINS 'auth_internal, note'
# LOG_DESTINATION 'sql'